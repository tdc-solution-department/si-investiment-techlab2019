swagger: "2.0"
info:
  description: "ソリSI投資 技術ラボ "
  version: "1.0.0"
  title: "ソリSI投資 技術ラボ"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "zenda@tdc.co.jp"
  license:
    name: "TODO"
    url: "http://todo.com"
host: "todo.co.jp"
basePath: "/v1"
tags:
- name: "LineWebhook"
  description: "LINEチャットボットの基本的なWEBHOOK API"
  externalDocs:
    description: "LINE Developers"
    url: "https://developers.line.biz/ja/reference/messaging-api/"
- name: "store"
  description: "Access to Petstore orders"
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "https"
paths:
  /line:
    post:
      tags:
      - "LineWebhook"
      summary: "LINEチャットボットの基本的なWEBHOOK API"
      description: ""
      operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "あくまで一例"
        required: true
        schema:
          $ref: "#/definitions/lineRequest"
      responses:
        200:
          description: "success"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  lineRequest:
    required:
    - "destination"
    - "events"
    type: "object"
    properties: 
      destination:
        type: "string"
      events: 
        type: "array"
        items: 
          $ref: "#/definitions/lineMessageEvent"
  lineMessageEvent:
    type: "object"
    required:
    - "type"
    - "mode"
    properties: 
      replyToken:
        type: "string"
        description: "イベントへの応答に使用するトークン"
      type:
        type: "string"
        example: "message"
      mode:
        type: "string"
        example: "active"
        description: "チャネルの状態"
      timestamp:
        type: "integer"
        format: "int64"
        description: "イベントの発生時刻（ミリ秒）"
      source:
        type: "object"
        properties: 
          type: 
            type: "string"
            example: "user"
          userId:
            type: "string"
      message:
        type: "object"
        properties: 
          id: 
            type: "string"
          type: 
            type: "string"
            example: "text"
          text:
            type: "string"

      



  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"